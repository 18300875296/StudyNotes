/** @format */

//当浏览器遇到javascript代码，它会先去解析代码，解析分为两个阶段:词法分析和语法分析

//词法分析:将代码语句分解成一个个的词法单元(tokens),包括关键字，变量名，变量值，运算符等
//语法分析：将tokens转化为抽象语法树(AST),每一个节点就是一个操作如变量声明，函数调用，变量赋值等等

//当解析完成之后，js引擎会执行生成的AST，执行过程分为两个阶段:预编译和运行

//预编译:将函数声明和变量声明提前保存到内存中，在这个阶段会创造全局执行上下文(变量对象，作用域链，this...)和函数执行上下文对象，不执行函数体内的语句。
//将变量声明和函数声明放入全局执行上下文的变量对象中，将函数内部声明放到函数执行上下文的变量对象中

//运行：从程序的入口开始，依次从上至下执行代码，引擎会按照作用域链查找变量，调用函数时会复制编译创建函数上下文到新的执行上下文中，并压入执行栈中

//函数提升和变量提升发生在预编译阶段，

//执行上下文(全局执行上下文，函数执行上下文)
//一个执行上下文可以看作是一个对象，这个对象中包含三个重要属性(变量对象，作用域链，this关键字)

//变量对象用于存储变量声明和函数声明和函数参数
//作用域链：用来查找变量和函数作用域，是由多个变量对象所组成，由当前的执行上下文中的变量对象和外部环境的执行上下文中的变量对象引用所组成的一个单链表
//作用域和作用域链是在编译阶段就确定
//this用来指向当前执行上下文所属的对象

//编译阶段创建的函数执行上下文是用来存储函数内部变量和函数，执行时创建的函数执行上下文则是用于存储函数调用时的状态信息
